# Containerfile.data: Data Processing Container (GPU-ready)
FROM nvidia/cuda:12.2.0-devel-ubuntu22.04

# System dependencies (removing conflicting GPU packages)
RUN apt-get update && apt-get install -y \
    python3.10 python3.10-venv python3.10-dev python3-pip \
    build-essential git wget curl \
    xvfb x11-utils \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Install GPU monitoring tools separately if needed
# RUN apt-get update && apt-get install -y nvtop && rm -rf /var/lib/apt/lists/* || true

# Set python3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Create working directory
WORKDIR /workspace

# Copy requirements and install Python dependencies
COPY requirements.txt ./
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install -r requirements.txt

# Configure matplotlib for headless operation
RUN python3 -c "import matplotlib; matplotlib.use('Agg'); import matplotlib.pyplot as plt; plt.ioff()"

# Copy scripts (will be overridden by volume mount if present)
COPY scripts/ ./scripts/

# Make wrapper script executable
RUN chmod +x scripts/run_data_collection.sh

# Create a startup script that correctly handles dependencies and GPU detection
RUN echo '#!/bin/bash\n\
echo "🚀 Starting data service..."\n\
\n\
# Ensure data directories exist with proper permissions\n\
echo "📁 Setting up data directories..."\n\
mkdir -p /tmp/data/raw /tmp/data/processed\n\
\n\
# Check GPU availability\n\
echo "🔍 Checking GPU availability..."\n\
if command -v nvidia-smi >/dev/null 2>&1; then\n\
    echo "📊 GPU Status:"\n\
    nvidia-smi --query-gpu=name,memory.total,memory.free,utilization.gpu --format=csv,noheader,nounits\n\
    echo "🔥 CUDA Version: $(nvcc --version | grep release)"\n\
else\n\
    echo "⚠️ nvidia-smi not found. GPU may not be available."\n\
fi\n\
\n\
# Always install dependencies from the mounted requirements.txt\n\
if [ -f /workspace/requirements.txt ]; then\n\
    echo "📦 Installing Python dependencies from requirements.txt..."\n\
    pip install --no-cache-dir -r /workspace/requirements.txt\n\
else\n\
    echo "⚠️ requirements.txt not found. Skipping dependency installation."\n\
fi\n\
\n\
# Test GPU access from Python\n\
echo "🐍 Testing GPU access from Python..."\n\
python3 -c "\n\
try:\n\
    import torch\n\
    if torch.cuda.is_available():\n\
        print(f\"✅ CUDA available: {torch.cuda.get_device_name(0)}\")\n\
        print(f\"📈 GPU Memory: {torch.cuda.get_device_properties(0).total_memory / 1024**3:.1f} GB\")\n\
    else:\n\
        print(\"❌ CUDA not available in PyTorch\")\n\
except ImportError:\n\
    print(\"⚠️ PyTorch not installed, skipping CUDA test\")\n\
except Exception as e:\n\
    print(f\"❌ GPU test failed: {e}\")\n\
"\n\
\n\
echo "✅ Dependencies are up-to-date. Running data collection..."\n\
./scripts/run_data_collection.sh "$@"\n\
echo "📦 Copying results to mounted volume..."\n\
cp -r /tmp/data/* /workspace/data/ 2> /dev/null || echo "Warning: Could not copy all data files."\n\
' > /workspace/start.sh && \
    chmod +x /workspace/start.sh

# Entrypoint for data collection/processing
ENTRYPOINT ["/workspace/start.sh"]
